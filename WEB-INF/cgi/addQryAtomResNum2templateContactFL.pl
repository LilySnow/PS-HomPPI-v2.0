#!/usr/bin/perl -w
#===============================================================================
#
#        Li Xue (), me.lixue@gmail.com
#        05/27/2015 01:39:48 PM
#
#  DESCRIPTION: add qry atomResNum and alignment symbols to template's contact file
#
#        INPUT 1 (template contact file):
#
#             Templ_aa1 Templ_chnID1  Templ_atomResNum1  Templ_aa2 Templ_chnID2  Templ_atomResNum2 dist
#             ALA   I   2   ARG  E  36 19.5321
#             ALA   I   2   GLY  E  38 18.620497
#             VAL   I   4   LEU  E  35 19.6688
#
#        INPUT 2 (aligned_resiNum file between the template and qry):
#
#            Qry_chnID   Qry_aa  Qry_seqResNum   Qry_atomResNum  Template_chnID  Template_aa Template_seqResNum  Template_atomResNum   Symbol
#            A   Q   1   1   a   M   1   1   ***
#            A   T   2   2   a   V   2   2   ***
#
#       OUTPUT:
#
#            atomResNum1_qry   chnID1_qry  atomResNum2_qry chnID2_qry  Templ_aa1   Templ_chnID1    Templ_atomResNum1   Templ_aa2   Templ_chnID2    Templ_atomResNum2   Templ_dist  align_symbol_AA' align_symbol_BB'
#            2   A   36  B   ALA I      2        ARG E     36        19.5321 *** ***
#            2   A   38  B   ALA I      2        GLY E     38        18.6497 *** ***
#
#===============================================================================

use strict;
use warnings;
use utf8;

my $template_CACAfl = shift @ARGV;  # template1.rec_lig.3bn3B_3bn3A.caca.contact
my $aligned_resiNumFL = shift @ARGV;

my ( $atomResNum_map, $symbols ) = &readAligned_resiNumFL($aligned_resiNumFL);
#- $atomResNum_map -> {template_chnID:template_atomResNum }  = "qry_atomResNum"

my $format_flag=1; #1: the input format is wrong

#----------- print header
&print_header();

#----------

open( INPUT, "<$template_CACAfl" ) or die("Cannot open $template_CACAfl:$!");
while (<INPUT>) {
    s/[\r\n]//mg;
    if (/^\w{3}\s+\w{1}\s+/) {

       #            ALA   I   2   GLY  E  38 18.620497

        $format_flag = 0;

        my (
            $aa1, $chnID1_template, $atomResNum1_template, $aa2,  $chnID2_template, $atomResNum2_template
            ,      $dist
        ) = split( /\s+/, $_ );


        if (!defined $dist || $dist =~/^\s{0,}$/ || $dist !~ /^[0-9\.]+$/){
            print "\ndist=$dist.\n";
            die("Input format is wrong. Check $template_CACAfl:$!");
        }


        my $flag = 0
          ; # 1: at least one of the template residues is not aligned with query proteins

        my @residues_template = (
            "$chnID1_template:$atomResNum1_template",
            "$chnID2_template:$atomResNum2_template"
        );
        my @residues_qry;    #"qry_chnID:qry_atomResNum"
        my @alignment_symbols;

        foreach my $resi_template (@residues_template) {
            my $resi_qry =
              $atomResNum_map->{$resi_template};    #"qry_chnID:qry_atomResNum"
            my $symbol = $symbols->{$resi_template};

            if ( defined $resi_qry ) {

                push @residues_qry, $resi_qry;

            }
            else {
                print
"#WARNING: The template residue $resi_template is not aligned with query proteins. Next Ca-Ca contacts.\n ";
                $flag = 1;
                last;
            }

            if ( !defined $symbol ) {
                die(
"ERROR: The template residue $resi_template has not alignment symbol in $aligned_resiNumFL:$!"
                );
            }
            else {
                push @alignment_symbols, $symbol;
            }
        }

        if ( $flag == 1 ) {

      # at least one of the template residues is not aligned with query proteins
            next;
        }

        #-- print
        my ( $chnID1_qry, $atomResNum1_qry ) = split( /:/, $residues_qry[0] );
        my ( $chnID2_qry, $atomResNum2_qry ) = split( /:/, $residues_qry[1] );
        my @newline_tmp = (
            $atomResNum1_qry, $chnID1_qry, $atomResNum2_qry, $chnID2_qry, $_,
            $alignment_symbols[0], $alignment_symbols[1]
        );
        my $newline = join( "\t", @newline_tmp );
        print "$newline\n";
    }

}
close INPUT;


if ($format_flag == 1){

    die("Input format is wrong. Check $template_CACAfl:$!");
}

sub print_header{
    print "#generated by $0\n";
    print "# *: not aligned with the template\n";
    print "# **: aligned but >= 5 angstroms\n";
    print "# ***: aligned and < 5 angstroms\n\n";

#             Templ_aa1 Templ_chnID1  Templ_atomResNum1  Templ_aa2 Templ_chnID2  Templ_atomResNum2 dist
    my @header_tmp = qw( atomResNum1_qry chnID1_qry atomResNum2_qry chnID2_qry Templ_aa1 Templ_chnID1  Templ_atomResNum1  Templ_aa2 Templ_chnID2  Templ_atomResNum2 Templ_dist align_symbol_AA' align_symbol_BB');

    my $header = join("\t", @header_tmp);
    print "#$header\n";
}

sub readAligned_resiNumFL {

#Qry_chnID   Qry_aa  Qry_seqResNum   Qry_atomResNum  Template_chnID  Template_aa Template_seqResNum  Template_atomResNum   Symbol
#A   Q   1   1   a   M   1   1   ***
#A   T   2   2   a   V   2   2   ***
#A   S   3   3   a   S   3   3   ***

    my $aligned_resiNumFL = shift @_;
    my $atomResNum_map;
    my $symbols;

#- $atomResNum_map -> {template_chnID:template_atomResNum }  = "qry_chnID:qry_atomResNum"
#- $symbols -> {template_chnID:template_atomResNum }  = "***"

    open( INPUT, "<$aligned_resiNumFL" )
      or die("Cannot open $aligned_resiNumFL:$!");
    while (<INPUT>) {
        s/[\n\r]//mg;

        if (/^\w{1}\s+/) {
            my @a = split( /\s+/, $_ );
            if ( scalar @a ne 9 ) {
                die("File format wrong. Check $aligned_resiNumFL:$!");
            }

            my (
                $qry_chnID,      $qry_aa,         $qry_seqResNum,
                $qry_atomResNum, $tem_chnID,      $tem_aa,
                $tem_seqResNum,  $tem_atomResNum, $symbol
            ) = split( /\s+/, $_ );
            $atomResNum_map->{"$tem_chnID:$tem_atomResNum"} =
              "$qry_chnID:$qry_atomResNum";
            $symbols->{"$tem_chnID:$tem_atomResNum"} = $symbol;

        }
    }

    close INPUT;

    if ( !defined $atomResNum_map || !defined $symbols ) {
        die("Nothing read from $aligned_resiNumFL:$!");
    }
    return ( $atomResNum_map, $symbols );

}

